getwd()
setwd("C:/Users/kliu/Desktop/geo-r-solutions")
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
DSM_HARV_info <- capture.output(
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
)
DSM_HARV <-
rast("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
library(raster)
library(rgdal)
library(ggplot2)
library(dplyr)
library(terra)
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
DSM_HARV_info <- capture.output(
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
)
DSM_HARV <-
rast("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
DSM_HARV
summary(DSM_HARV)
summary(values(DSM_HARV))
# or the tidy way
values(DSM_HARV) %>% summary()
# as usual, ggplot wants dataframes
DSM_HARV_df <- as.data.frame(DSM_HARV, xy = TRUE)
# change the name of the column to better reflect what it is:
# this isn't in the lesson
names(DSM_HARV_df)[names(DSM_HARV_df) == 'HARV_dsmCrop'] <- 'Elevation'
str(DSM_HARV_df)
ggplot() +
geom_raster(data = DSM_HARV_df , aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
coord_quickmap()
ggplot() +
geom_raster(data = DSM_HARV_df , aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
ggplot() +
geom_raster(data = DSM_Harv_df , aes(x = x, y = y, fill = DSM_HARV_df)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = DSM_HARV_df)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
rlang::last_trace()
summary(DSM_HARV_df)
# this shows our current raster doesn't have any.
summary(DSM_HARV)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA_integer_, 400, 420, 1L), include.lowest = TRUE)
ggplot() +
geom_raster(data = DSM_HARV_df , aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
coord_quickmap()
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
any(is.na(DSM_HARV_df$Elevation))
### To get the image in the lesson
HARV_DTM_df <- raster("data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_DTMhill_WGS84.tif") %>%
as.data.frame(xy = TRUE)
ggplot() +
geom_raster(data = HARV_DTM_df , aes(x = x, y = y, fill = HARV_DTMhill_WGS84)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
ggplot() +
geom_raster(data = HARV_DTM_df , aes(x = x, y = y, fill = HARV_DTMhill_WGS84)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'DSM_HARVCrop'] <- 'Elevation'
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
str(DSM_highvals)
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
# use reclassified raster data as an annotation
annotate(geom = 'raster', x = DSM_highvals$x, y = DSM_highvals$y, fill = scales::colour_ramp('deeppink')(DSM_highvals$Elevation)) +
ggtitle("Elevation Data", subtitle = "Highlighting values > 400m") +
coord_quickmap()
#check if there are actually any NA's
#A few ways:
any(is.na(DSM_HARV_df$Elevation))
# no value = -9999
DSM_HARV_info
# this shows our current raster doesn't have any.
summary(DSM_HARV)
#check if there are actually any NA's
#A few ways:
any(is.na(DSM_HARV_df$Elevation))
# no value = -9999
DSM_HARV_info
# this shows our current raster doesn't have any.
summary(DSM_HARV)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- reclassify(DSM_HARV, rcl = c(0, 400, NA, 400, 420, 1L), include.lowest = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA, 400, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
str(DSM_highvals)
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
# use reclassified raster data as an annotation
annotate(geom = 'raster', x = DSM_highvals$x, y = DSM_highvals$y, fill = scales::colour_ramp('deeppink')(DSM_highvals$Elevation)) +
ggtitle("Elevation Data", subtitle = "Highlighting values > 400m") +
coord_quickmap()
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NaN, 400, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
View(DSM_highvals)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NaN, 400, 420, 1), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
View(DSM_HARV_df)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NaN, 400, 420, 1), include.lowest = TRUE, right=FALSE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NaN), include.lowest = TRUE, right=FALSE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
View(DSM_highvals)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(400, 420, 1L), include.lowest = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(400, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
# use reclassified raster data as an annotation
annotate(geom = 'raster', x = DSM_highvals$x, y = DSM_highvals$y, fill = scales::colour_ramp('deeppink')(DSM_highvals$Elevation)) +
ggtitle("Elevation Data", subtitle = "Highlighting values > 400m") +
coord_quickmap()
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA_character_, 400, 420, 1L), include.lowest = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA_complex_, 400, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NaN, 400, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, 420), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
str(DSM_highvals)
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
# use reclassified raster data as an annotation
annotate(geom = 'raster', x = DSM_highvals$x, y = DSM_highvals$y, fill = scales::colour_ramp('deeppink')(DSM_highvals$Elevation)) +
ggtitle("Elevation Data", subtitle = "Highlighting values > 400m") +
coord_quickmap()
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA_integer_, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
str(DSM_highvals)
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
# use reclassified raster data as an annotation
annotate(geom = 'raster', x = DSM_highvals$x, y = DSM_highvals$y, fill = scales::colour_ramp('deeppink')(DSM_highvals$Elevation)) +
ggtitle("Elevation Data", subtitle = "Highlighting values > 400m") +
coord_quickmap()
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
str(DSM_highvals)
ggplot() +
geom_raster(data = DSM_HARV_df, aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
# use reclassified raster data as an annotation
annotate(geom = 'raster', x = DSM_highvals$x, y = DSM_highvals$y, fill = scales::colour_ramp('deeppink')(DSM_highvals$Elevation)) +
ggtitle("Elevation Data", subtitle = "Highlighting values > 400m") +
coord_quickmap()
