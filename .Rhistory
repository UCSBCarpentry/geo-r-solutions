install.packages("installr")
rversion()
install.packages("rversions")
rversion()
rversions()
library("rversions")
rversions()
sessionInfo()
install.packages("tidyverse")
quarto check
# Install the template packages to your R library
install.packages(c("sandpaper", "varnish", "pegboard", "tinkr"))
install.packages(c("sandpaper", "varnish", "pegboard", "tinkr"))
#Install raster and terra if not installed already
install.pacakges(c("raster", "terra"))
#Install raster and terra if not installed already
install.packages(c("raster", "terra"))
setwd("C:/Users/kliu/Desktop/geo-r-solutions")
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
library(raster)
library(rgdal)
library(ggplot2)
library(dplyr)
library(terra)
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
HARV_DSM_info <- capture.output(
describe("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
)
HARV_DSM <-
raster("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
HARV_DSM
summary(HARV_DSM)
summary(values(HARV_DSM))
# or the tidy way
values(HARV_DSM) %>% summary()
# as usual, ggplot wants dataframes
HARV_DSM_df <- as.data.frame(HARV_DSM, xy = TRUE)
str(HARV_DSM_df)
# change the name of the column to better reflect what it is:
# this isn't in the lesson
names(HARV_DSM_df)[names(HARV_DSM_df) == 'HARV_dsmCrop'] <- 'Elevation'
str(HARV_DSM_df)
ggplot() +
geom_raster(data = HARV_DSM_df , aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c() +
coord_quickmap()
# deal with NA's
# I think this ggplot should go after any(is.na) and summary()
ggplot() +
geom_raster(data = HARV_DSM_df , aes(x = x, y = y, fill = Elevation)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
#check if there are actually any NA's
#A few ways:
any(is.na(HARV_DSM_df$Elevation))
# this shows our current raster doesn't have any.
summary(HARV_DSM)
### To get a similar image in the lesson example
# Load image into dataframe
HARV_DTM_df <- raster("data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_DTMhill_WGS84.tif") %>%
as.data.frame(xy = TRUE)
ggplot() +
geom_raster(data = HARV_DTM_df , aes(x = x, y = y, fill = HARV_DTMhill_WGS84)) +
scale_fill_viridis_c(na.value = 'deeppink') +
coord_quickmap()
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(DSM_HARV, rcl = c(0, 400, NA, 420, 1L), include.lowest = TRUE)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(HARV_DSM, rcl = c(0, 400, NA, 420, 1L), include.lowest = TRUE)
library(raster)
library(rgdal)
library(raster)
library(rgdal)
library(raster)
library(terra)
# dealing with bad values
# lesson shows a figure that it doesn't make.
# here's the code:
# The line below is throwing me off:
DSM_highvals <- classify(HARV_DSM, rcl = c(0, 400, NA, 420, 1L), include.lowest = TRUE)
### here the elevation isn't being replaced correctly and I'm not sure where to fix
DSM_highvals <- as.data.frame(DSM_highvals, xy = TRUE)
str(DSM_highvals)
# change that name again
names(DSM_highvals)[names(DSM_highvals) == 'HARV_dsmCrop'] <- 'Elevation'
#need to reload HARV_DSM
HARV_DSM <-
raster("data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif")
HARV_DSM_df <- as.data.frame(DSM_HARV, xy = TRUE)
HARV_DSM_df <- as.data.frame(HARV_DSM, xy = TRUE)
names(HARV_DSM_df)[names(HARV_DSM_df) == 'HARV_dsmCrop'] <- 'Elevation'
